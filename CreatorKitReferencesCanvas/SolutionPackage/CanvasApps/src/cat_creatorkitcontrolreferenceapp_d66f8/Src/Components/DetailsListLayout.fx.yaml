DetailsListLayout As CanvasComponent:
    ComponentHeight: =If(pivotAppCode_25.Selected.ItemKey="code",htmlCode_25.Y+htmlCode_25.Height,430)
    Fill: =RGBA(0, 0, 0, 0)
    Height: =Self.ComponentHeight
    OnReset: |-
        =
        ClearCollect(
            colLayoutRows,
            {
                id: "row1",
                name: "",
                heading: "Lorem ipsum dolor sit amet.",
                tag: "Custom Pages",
                review: "",
                iconimage:"icon:WebComponents",
                score:"Score 87%",
                TagColor:LookUp(colTags,DisplayName="Teal").BackgroundColor,
                TagBorderColor:LookUp(colTags,DisplayName="Teal").BackgroundColor,
                selectable:false
            },
            {
                id: "row2",
                name: "Sed a sollicitudin nisi.",
                review: "Review",
                selectable:true
            },
            {
                id: "row3",
                name: "Suspendisse eu turpis a augue ullamcorper aliquam.",
                review: "Review",
                selectable:true
            },
            {
                id: "row4",
                heading: "Pellentesque pharetra lectus eget ligula maximus maximus.",
                tag: "Power App",
                review: "",
                iconimage:"icon:WebComponents",
                score:"Score 87%",
                TagColor:LookUp(colTags,DisplayName="Marigold").BackgroundColor,
                TagBorderColor:LookUp(colTags,DisplayName="Marigold").BackgroundColor,
                selectable:false
            },
            {
                id: "row5",
                name: "Nunc non posuere leo.",
                review: "Review",
                selectable:true
            },
            {
                id: "row6",
                heading: "Fusce vitae nulla nec mi ultricies tempus.",
                tag: "Power App",
                iconimage: "icon:WebComponents",
                score:"Score 87%",
                TagColor:LookUp(colTags,DisplayName="Yellow").BackgroundColor,
                TagBorderColor:LookUp(colTags,DisplayName="Yellow").BackgroundColor,
                selectable:false
            },
            {
                id: "row7",
                name: "Integer luctus mauris vehicula.",
                review: "Review",
                selectable:true
            }
        )
    Width: =640
    X: =0
    Y: =0
    ZIndex: =1

    lblExampleTitle_25 As label:
        Color: =varTheme.palette.neutralPrimaryAlt
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =35
        Size: =varTheme.fontSizes.m
        Text: ="Layouts"
        Width: =630
        Y: =22
        ZIndex: =2

    "pivotAppCode_25 As 'Fluent Pivot (1.0.6-beta)'.pcfdataset":
        DisplayMode: =DisplayMode.Edit
        Height: =49
        Items: |-
            =Table({ItemKey:"app",ItemDisplayName:"App",ItemIconName:"PowerApps2Logo"},{ItemKey:"code",ItemDisplayName:"Code",ItemIconName:"Code"})
        OnSelect: =Set(varAutoHeight,If(Self.Selected.ItemKey="app",200,htmlCode_25.Y+htmlCode_25.Height))
        RenderType: ='''PowerCAT.Pivot.RenderType'''.PivotTabs
        SelectedKey: ="app"
        Theme: =varTheme.themeJSON
        Width: =174
        X: =Parent.Width-Self.Width
        Y: =20
        ZIndex: =3

    line_17 As rectangle:
        Fill: =varTheme.palette.neutralTertiary
        Height: =1
        Width: =Parent.Width
        Y: =68
        ZIndex: =4

    htmlCode_25 As htmlViewer:
        AutoHeight: =true
        BorderColor: =varTheme.palette.neutralPrimary
        BorderStyle: =BorderStyle.Solid
        BorderThickness: =1
        Color: =varTheme.palette.neutralPrimary
        DisplayMode: =DisplayMode.View
        Font: =Font.'Courier New'
        Height: =115
        HtmlText: |-
            ="<pre class=""hljs"" style=""display: block; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68);"">DetailsListLayout As CanvasComponent:
                OnReset: |-
                    =
                    ClearCollect(
                        colLayoutRows,
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row1""</span>,
                            name: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""""</span>,
                            heading: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Lorem ipsum dolor sit amet.""</span>,
                            tag: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Custom Pages""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""""</span>,
                            iconimage:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""icon:WebComponents""</span>,
                            score:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Score 87%""</span>,
                            TagColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Teal""</span>).BackgroundColor,
                            TagBorderColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Teal""</span>).BackgroundColor,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row2""</span>,
                            name: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Sed a sollicitudin nisi.""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review""</span>,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row3""</span>,
                            name: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Suspendisse eu turpis a augue ullamcorper aliquam.""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review""</span>,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row4""</span>,
                            heading: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Pellentesque pharetra lectus eget ligula maximus maximus.""</span>,
                            tag: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Power App""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""""</span>,
                            iconimage:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""icon:WebComponents""</span>,
                            score:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Score 87%""</span>,
                            TagColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Marigold""</span>).BackgroundColor,
                            TagBorderColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Marigold""</span>).BackgroundColor,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row5""</span>,
                            name: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Nunc non posuere leo.""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review""</span>,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row6""</span>,
                            heading: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Fusce vitae nulla nec mi ultricies tempus.""</span>,
                            tag: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Power App""</span>,
                            iconimage: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""icon:WebComponents""</span>,
                            score:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Score 87%""</span>,
                            TagColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Yellow""</span>).BackgroundColor,
                            TagBorderColor:LookUp(colTags,DisplayName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Yellow""</span>).BackgroundColor,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>
                        },
                        {
                            id: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""row7""</span>,
                            name: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Integer luctus mauris vehicula.""</span>,
                            review: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review""</span>,
                            selectable:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>
                        }
                    )
            
                <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""FluentDetailsListLayout As 'Fluent Details List (0.0.13)'.pcfdataset""</span>:
                    columns_Items: |-
                        =With({
                            <span class=""hljs-comment"" style=""color: rgb(136, 136, 136);"">// If there is a selection column, we remove the width and the padding</span>
                            availableWidth:Self.Width,
                            padding:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">32</span>,
                            iconWidth:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">24</span>,
                            reviewWidth:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">100</span>,
                            scrollWidth:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">20</span>
                            },
                            Table(
                                <span class=""hljs-comment"" style=""color: rgb(136, 136, 136);"">// Main Columns</span>
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""iconimage""</span>,
                                    ColCellType:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""image""</span>,
                                    ColImageColor:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""blue""</span>,
                                    ColVerticalAlign: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>,
                                    ColHorizontalAlign: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>,
                                    ColWidth:iconWidth
                                },
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""heading""</span>,
                                    ColDisplayName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Project Name""</span>,
                                    ColWidth: availableWidth-iconWidth-padding-reviewWidth-padding-scrollWidth,
                                    ColIsBold:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>,
                                    ColRowHeader:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColHideWhenBlank:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColPaddingTop:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">0</span>,
                                    ColVerticalAlign: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>,
                                    ColMultiLine:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>
                                },
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""review""</span>,
                                    ColCellType:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""link""</span>,
                                    ColHideWhenBlank:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColWidth:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">100</span>,
                                    ColHorizontalAlign:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""right""</span>
                                },
                                <span class=""hljs-comment"" style=""color: rgb(136, 136, 136);"">// Sub text columns</span>
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""name""</span>,
                                    ColShowAsSubTextOf:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""heading""</span>,
                                    ColSubTextRow:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">0</span>,
                                    ColPaddingLeft:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">30</span>,
                                    ColHideWhenBlank:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColVerticalAlign: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>
                                },
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""tag""</span>,
                                    ColShowAsSubTextOf:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""heading""</span>,
                                    ColCellType:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""tag""</span>,
                                    ColTagColorColumn: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""TagColor""</span>,
                                    ColTagBorderColorColumn: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""TagBorderColor""</span>,
                                    ColSubTextRow:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">0</span>,
                                    ColHideWhenBlank:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColHorizontalAlign:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>,
                                    ColPaddingLeft:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">16</span>,
                                    ColPaddingTop:<span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">8</span>,
                                    ColVerticalAlign: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""center""</span>
                                },
                                {
                                    ColName: <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""score""</span>,
                                    ColShowAsSubTextOf:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""review""</span>,
                                    ColCellType:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""tag""</span>,
                                    ColHideWhenBlank:<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">true</span>,
                                    ColHorizontalAlign:<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""right""</span>
                                
                                }
                            )
                        )
                    Compact: =<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>
                    Items: =colLayoutRows
                    OnChange: |-
                        =If(Self.EventName=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""CellAction""</span> &amp;&amp; Self.EventColumn=<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""review""</span>,
                            With({selectedItem:LookUp(colLayoutRows,id=Self.EventRowKey)},
                                If(selectedItem.selectable,
                                    Notify($<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review {selectedItem.name}""</span>);
                                );
                            );
                        );
                    OnSelect: |
                        =
                        If(Self.Selected.selectable,
                            Notify($<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""Review {Self.Selected.name}""</span>);
                        );
                    RecordCanSelect: =<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""selectable""</span>
                    RecordKey: =<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""id""</span>
                    SelectionType: =<span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">''</span><span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">'PowerCAT.FluentDetailsList.SelectionType'</span><span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">''</span>.None
                    SelectRowsOnFocus: =<span class=""hljs-literal"" style=""color: rgb(120, 169, 96);"">false</span>
                    Theme: varTheme.themeJSON
            </pre>"
        Size: =10
        Visible: =pivotAppCode_25.Selected.ItemKey="code"
        Width: =Parent.Width
        Y: =68
        ZIndex: =5

    Group22 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =7

        "ElevationLayout As 'Fluent Elevation (1.0.6-beta)'":
            DisplayMode: =DisplayMode.Edit
            Height: =FluentDetailsListLayout.Height
            Visible: =pivotAppCode_25.Selected.ItemKey="app"
            Width: =FluentDetailsListLayout.Width
            X: =FluentDetailsListLayout.X
            Y: =FluentDetailsListLayout.Y
            ZIndex: =1

        "FluentDetailsListLayout As 'Fluent Details List (1.0.6-beta)'.pcfdataset":
            columns_Items: |-
                =With({
                    // If there is a selection column, we remove the width and the padding
                    availableWidth:Self.Width,
                    padding:32,
                    iconWidth:24,
                    reviewWidth:100,
                    scrollWidth:20
                    },
                    Table(
                        // Main Columns
                        {
                            ColName: "iconimage",
                            ColCellType:"image",
                            ColImageColor:"blue",
                            ColVerticalAlign: "center",
                            ColHorizontalAlign: "center",
                            ColWidth:iconWidth
                        },
                        {
                            ColName: "heading",
                            ColDisplayName: "Project Name",
                            ColWidth: availableWidth-iconWidth-padding-reviewWidth-padding-scrollWidth,
                            ColIsBold:false,
                            ColRowHeader:true,
                            ColHideWhenBlank:true,
                            ColPaddingTop:0,
                            ColVerticalAlign: "center",
                            ColMultiLine:true
                        },
                        {
                            ColName: "review",
                            ColCellType:"link",
                            ColHideWhenBlank:true,
                            ColWidth:100,
                            ColHorizontalAlign:"right"
                        },
                        // Sub text columns
                        {
                            ColName: "name",
                            ColShowAsSubTextOf:"heading",
                            ColSubTextRow:0,
                            ColPaddingLeft:30,
                            ColHideWhenBlank:true,
                            ColVerticalAlign: "center"
                        },
                        {
                            ColName: "tag",
                            ColShowAsSubTextOf:"heading",
                            ColCellType:"tag",
                            ColTagColorColumn: "TagColor",
                            ColTagBorderColorColumn: "TagBorderColor",
                            ColSubTextRow:0,
                            ColHideWhenBlank:true,
                            ColHorizontalAlign:"center",
                            ColPaddingLeft:16,
                            ColPaddingTop:8,
                            ColVerticalAlign: "center"
                        },
                        {
                            ColName: "score",
                            ColShowAsSubTextOf:"review",
                            ColCellType:"tag",
                            ColHideWhenBlank:true,
                            ColHorizontalAlign:"right"
                        
                        }
                    )
                )
            Compact: =false
            DisplayMode: =DisplayMode.Edit
            Height: =300
            Items: =colLayoutRows
            OnChange: |-
                =If(Self.EventName="CellAction" && Self.EventColumn="review",
                    With({selectedItem:LookUp(colLayoutRows,id=Self.EventRowKey)},
                        If(selectedItem.selectable,
                            Notify($"Review {selectedItem.name}");
                        );
                    );
                );
            OnSelect: |
                =
                If(Self.Selected.selectable,
                    Notify($"Review {Self.Selected.name}");
                );
            RecordCanSelect: ="selectable"
            RecordKey: ="id"
            SelectionType: ='''PowerCAT.FluentDetailsList.SelectionType'''.None
            SelectRowsOnFocus: =false
            Theme: =varTheme.themeJSON
            Visible: =pivotAppCode_25.Selected.ItemKey="app"
            Width: =Parent.Width-Self.X*2
            X: =8
            Y: =102
            ZIndex: =6

            heading2_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="heading"
                FieldName: ="heading"
                FieldVariantName: ="textualColumn"
                Order: =1
                ZIndex: =1

            Icon1_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="icon"
                FieldName: ="icon"
                FieldVariantName: ="textualColumn"
                Order: =2
                ZIndex: =2

            name3_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="name"
                FieldName: ="name"
                FieldVariantName: ="textualColumn"
                Order: =3
                ZIndex: =3

            tag2_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="tag"
                FieldName: ="tag"
                FieldVariantName: ="textualColumn"
                Order: =4
                ZIndex: =4

            iconimage2_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="iconimage"
                FieldName: ="iconimage"
                FieldVariantName: ="textualColumn"
                Order: =5
                ZIndex: =5

            review2_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="review"
                FieldName: ="review"
                FieldVariantName: ="textualColumn"
                Order: =6
                ZIndex: =6

            score1_3 As pcfDataField.textualColumn:
                FieldDisplayName: ="score"
                FieldName: ="score"
                FieldVariantName: ="textualColumn"
                Order: =7
                ZIndex: =7

            id2 As pcfDataField.textualColumn:
                FieldDisplayName: ="id"
                FieldName: ="id"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =8
                ZIndex: =8

            selectable1 As pcfDataField.textualColumn:
                FieldDisplayName: ="selectable"
                FieldName: ="selectable"
                FieldType: ="b"
                FieldVariantName: ="textualColumn"
                Order: =9
                ZIndex: =9

            TagBorderColor2 As pcfDataField.textualColumn:
                FieldDisplayName: ="TagBorderColor"
                FieldName: ="TagBorderColor"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =10
                ZIndex: =10

            TagColor2 As pcfDataField.textualColumn:
                FieldDisplayName: ="TagColor"
                FieldName: ="TagColor"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =11
                ZIndex: =11

