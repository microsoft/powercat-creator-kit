scrDetailsList_Sorting As screen:

    stackRoot_9 As groupContainer.verticalAutoLayoutContainer:
        Fill: =varTheme.palette.neutralLighterAlt
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =2*varTheme.U
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: =4*varTheme.U
        PaddingRight: =4*varTheme.U
        PaddingTop: =2*varTheme.U
        Width: =Parent.Width-Self.X
        X: =LeftNav_10.Width
        Y: =Header_10.Height - 20
        ZIndex: =2

        lblTitle_9 As label:
            Color: =varTheme.palette.neutralPrimary
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =60
            Size: =varTheme.fontSizes.xl
            Text: ="Fluent Details List Sorting & Paging"
            Width: =228
            ZIndex: =1

        comDescription_9 As TextPanel:
            LayoutMinHeight: =640
            Text: |-
                ="
                <h3>Sorting</h3>
                <p>A column is defined as being sortable by setting the <code>ColSortable</code> property to true. If the column shows a text value that is different to the sort order required (e.g. a formatted date or status column), then a different sort column can be specified using the <code>ColSortBy</code> property.</p>
                <p>Sorting is then handled in two ways:</p>
                <ol>
                <li>Automatically when connected to a Dataverse data source.</li>
                <li>Manually when using collections.</li>
                </ol>
                <h4 >Automatic Sorting</h4>
                <p>When the Items dataset is a native Dataverse dataset, it will automatically sorted if a column is marked as sortable. If there any changes made to the shape of a Dataverse collection by using <code>AddColumn</code>, or by storing the data in a collection, automatic sorting will no longer work, and manual sorting must be implemented.</p>
                <h4 >Manual Sorting</h4>
                <p>Manual Sorting is supported outside of the component to allow for custom connector support and local collection sorting when not connected to a Dataverse connection. Columns can be defined as being sortable or not. When the column sort is selected, an <code>OnChange</code> event is raised providing the column and direction. The app should then use these values to change the bound collection to the table to update with the sorted records.</p>
                When connecting the DetailsList to a Dataverse data source, the paging and sorting is handled automatically, however the app must provide the buttons to perform navigation and provide information on the number of records. This is to allow for custom layouts.
                
                <h3>Paging</h3>
                <p>Paging is handled internally by the component, however the buttons to move back/forwards must be created by the hosting app, and events sent to the component.</p>
                <p>The following properties are used to control paging:</p>
                <ul>
                <li><code>PageSize</code> - Defines how many records to load per page.</li>
                <li><code>PageNumber</code> - Outputs the current page shown.</li>
                <li><code>HasNextPage</code> - Outputs true if there is a next page.</li>
                <li><code>HasPreviousPage</code> - Outputs true if there is a previous page.</li>
                <li><code>TotalRecords</code> - Outputs the total number of records available.</li>
                </ul>
                "
            ZIndex: =2

        conSamplesSortingPaging As groupContainer.manualLayoutContainer:
            FillPortions: =0
            Height: =stackSamplesSortingPaging.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            ZIndex: =4

            "Elevation2_16 As 'Fluent Elevation (1.0.6-beta)'":
                Depth: ='''PowerCAT.Elevation.Depth'''.Depth4
                DisplayMode: =DisplayMode.Edit
                Height: =Parent.Height
                HoverDepth: ='''PowerCAT.Elevation.HoverDepth'''.Depth4
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            stackSamplesSortingPaging As groupContainer.verticalAutoLayoutContainer:
                Height: =lblUsagePaging.Height+DetailsListPaging_1.ComponentHeight+Self.PaddingTop+Self.PaddingBottom
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =8*varTheme.U
                PaddingLeft: =8*varTheme.U
                PaddingRight: =8*varTheme.U
                PaddingTop: =8*varTheme.U
                Width: =Parent.Width
                ZIndex: =2

                lblUsagePaging As label:
                    Color: =varTheme.palette.neutralPrimary
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =12*varTheme.U
                    Size: =varTheme.fontSizes.l
                    Text: ="Usage"
                    Width: =228
                    X: =40
                    Y: =40
                    ZIndex: =1

                DetailsListPaging_1 As DetailsListPaging:
                    LayoutMinHeight: =640
                    ZIndex: =2

    LeftNav_10 As LeftNav:
        Height: =Parent.Height - 20
        Width: =200
        Y: =Header_10.Height
        ZIndex: =7

    Header_10 As Header:
        RightButtonVisible: =false
        Text: ="CREATOR KIT Reference App"
        Width: =App.Width
        ZIndex: =8

