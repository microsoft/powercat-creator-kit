[
  {
    "Data": "[{\"Component Maturity\":\"Preview\",\"Components\":\"A753CFAA-3520-ED11-B83E-000D3A163CDC\",\"Components Description\":\"\\u003Cp\\u003EA Spinner is an outline of a circle which animates around itself indicating to the user that things are processing. A Spinner is shown when it\\u0027s unsure how long a task will take making it the indeterminate version of a ProgressIndicator. They can be various sizes, located inline with content or centered. They generally appear after an action is being processed or committed. They are subtle and generally do not take up much space, but are transitions from the completed task.\\u003C/p\\u003E\",\"Guidance\":null,\"Name\":\"Spinner\"},{\"Component Maturity\":\"GA\",\"Components\":\"009A003A-FF1C-ED11-B83E-000D3A1B4027\",\"Components Description\":\"Labels give a name or title to a control or group of controls. The Auto Width Label acts similar to the standard label, but will expand dynamically in width to accommodate the text. This functionality is currently not supported in canvas apps \\u0026 custom pages today.\\n\",\"Guidance\":null,\"Name\":\"Auto Width Label\"},{\"Component Maturity\":\"GA\",\"Components\":\"60FF3486-1D20-ED11-B83E-000D3A1B4027\",\"Components Description\":\"A navigation pane (Nav) provides links to the main areas of an app or site\",\"Guidance\":\"\\u003Cdiv data-wrapper=\\u0022true\\u0022 style=\\u0022font-size:9pt;font-family:\\u0027Segoe UI\\u0027,\\u0027Helvetica Neue\\u0027,sans-serif;\\u0022\\u003E\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ELayout\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EIn larger configurations, the navigation pane is always on-screen, usually on the left of the view. On smaller screens, consider collapsing it into a skinnier version or hiding it behind a menu button (note that \\u003Ccode\\u003ENav\\u003C/code\\u003E does not currently have either of these behaviors built in).\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EDon\\u2019t overload your navigation pane. Too many items in the \\u003Ccode\\u003ENav\\u003C/code\\u003E is indicative of an app that is poorly organized or trying to do too much.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u0026nbsp;\\u003C/h3\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003EContent\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EKeep the names of the navigation items brief and clear, rather than trying to be overly specific.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EUse the word that feels right for the navigation. For example, some items may make more sense as nouns (e.g. \\u201CFiles\\u201D), others as adjectives (\\u201CShared\\u201D). Use what makes sense for customers, and keep it short!\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003ETry to keep your app\\u2019s nav in a consistent order across platforms. This sort of consistency increases predictability which drives customer confidence, thus retaining and engaging them.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EIf using a menu button to expand and collapse the \\u003Ccode\\u003ENav\\u003C/code\\u003E, use the tooltip \\u201CExpand navigation\\u201D or \\u201CCollapse navigation\\u201D.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\u003C/div\\u003E\",\"Name\":\"Nav\"},{\"Component Maturity\":\"Preview\",\"Components\":\"B43D4649-741F-ED11-B83E-000D3A1BE7CB\",\"Components Description\":\"The calendar control lets people select and view a single date or a range of dates in their calendar. It\\u2019s made up of 3 separate views: the month view, year view, and decade view.\",\"Guidance\":\"\\u003Cdiv data-wrapper=\\u0022true\\u0022 style=\\u0022font-size:9pt;font-family:\\u0027Segoe UI\\u0027,\\u0027Helvetica Neue\\u0027,sans-serif;\\u0022\\u003E\\u003Cdiv class=\\u0022Box-body blob gist-border-0 js-code-block-container p-5 p-xl-6 readme\\u0022 id=\\u0022readme\\u0022\\u003E\\u003Carticle class=\\u0022markdown-body entry-content container-lg\\u0022\\u003E\\u003Ch3 dir=\\u0022auto\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ELayout\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv dir=\\u0022auto\\u0022\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EDon\\u2019t break\\u0026nbsp;the control apart.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EInclude an up and down arrow for navigating between time ranges and a chevron to make the calendar collapsible.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\n\\u003Ch3 dir=\\u0022auto\\u0022\\u003E\\u0026nbsp;\\u003C/h3\\u003E\\n\\u003Ch3 dir=\\u0022auto\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003EContent\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv dir=\\u0022auto\\u0022\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EUse the following format for dates:\\u0026nbsp;month, day, year,\\u0026nbsp;as\\u0026nbsp;in\\u0026nbsp;July 31, 2016. When\\u0026nbsp;space is limited, use numbers and slashes for dates if the code supports that format and automatically displays the appropriate date format for different locales. For example, 2/16/19.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EDon\\u0027t use ordinal numbers (such as\\u0026nbsp;1st, 12th,\\u0026nbsp;or\\u0026nbsp;23rd) to indicate a date.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\u003C/article\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\",\"Name\":\"Calendar\"},{\"Component Maturity\":\"GA\",\"Components\":\"56FB5C68-9B1A-ED11-B83E-000D3A1E3234\",\"Components Description\":\"Breadcrumbs should be used as a navigational aid in your app or site. They indicate the current page\\u2019s location within a hierarchy and help the user understand where they are in relation to the rest of that hierarchy. They also afford one-click access to higher levels of that hierarchyBreadcrumbs are typically placed, in horizontal form, under the masthead or navigation of an experience, above the primary content area.\",\"Guidance\":null,\"Name\":\"Breadcrumb\"},{\"Component Maturity\":\"GA\",\"Components\":\"4E98D18F-921E-ED11-B83E-000D3A52E7E9\",\"Components Description\":\"A details list (DetailsList) is a robust way to display an information-rich collection of items, and allow people to sort, group, and filter the content. Use a details list when information density is critical.\",\"Guidance\":\"\\u003Cdiv data-wrapper=\\u0022true\\u0022 style=\\u0022font-size:9pt;font-family:\\u0027Segoe UI\\u0027,\\u0027Helvetica Neue\\u0027,sans-serif;\\u0022\\u003E\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ELayout\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EList items are composed of selection, icon, and name columns at minimum. You can include other columns,such as date modified, or any other metadata field associated with the collection.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EAvoid using file type icon overlays to denote status of a file as it can make the entire icon unclear.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EIf there are multiple lines of text in a column, consider the variable row height variant.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EGive columns ample default width to display information.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u0026nbsp;\\u003C/h3\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ECanvas app specific\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EAlways use the DetailsList headers instead of creating a canvas component overlay like you might in a gallery - this will avoid accessibility issues\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EDon\\u0027t dynamically set the height of the DetailsList using the number of rows - use a fixed height, or adjust the height based on the screen size available.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003ESorting can be performed using either using Dataverse sorting or the configurable \\u0060SortBy\\u0060 properties.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u0026nbsp;\\u003C/h3\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003EContent\\u003C/span\\u003E\\u003C/h3\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EUse sentence-style capitalization for column headers\\u2014only capitalize the first word.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\u003C/div\\u003E\",\"Name\":\"DetailsList\"},{\"Component Maturity\":\"Preview\",\"Components\":\"4D56B65C-5E1F-ED11-B83E-000D3A52ED7C\",\"Components Description\":\"Expand menus are like \\u0060Nav\\u0060 components used to provide navigation, which provide links to the main areas of an app or site. It also provides the ability to expand and collapse the menu, which gives the user an option for more space if desired. It should be used in conjunction with layout containers to make sure the experience is responsive due to it\\u0027s nature of varying width during runtime.\",\"Guidance\":null,\"Name\":\"ExpandMenu\"},{\"Component Maturity\":\"Experimental\",\"Components\":\"20951182-681F-ED11-B83E-000D3A52EEDB\",\"Components Description\":\"Panels are overlays that contain supplementary content and are used for complex creation, edit, or management experiences.  For example, viewing details about an item in a list or editing settings.\",\"Guidance\":\"\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003ELayout\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003EUse for self-contained experiences where someone doesn\\u2019t need to interact with the app view to complete the task.\\u003C/li\\u003E\\n\\u003Cli\\u003EConsider how the panel and its contained contents will scale across responsive web breakpoints.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EHeader\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003EInclude a close button in the top-right corner.\\u003C/li\\u003E\\n\\u003Cli\\u003ELock the title to the top of the panel.\\u003C/li\\u003E\\n\\u003Cli\\u003EThe header can contain a variety of components. Components are stacked under the main title, locked to the top, and push content down.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EBody\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003EThe body is a flexible container that can house a wide variety of components, content, and formatting.\\u003C/li\\u003E\\n\\u003Cli\\u003EContent can scroll.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\",\"Name\":\"Panel\"},{\"Component Maturity\":\"Experimental\",\"Components\":\"847AD4CA-F11F-ED11-B83E-000D3A52EEDB\",\"Components Description\":\"A dialog box (Dialog) is a temporary pop-up that takes focus from the page or app and requires people to interact with it. It\\u2019s primarily used for confirming actions, such as deleting a file, or asking people to make a choice.\",\"Guidance\":\"\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003ELayout\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003EDon\\u0027t use more than three buttons.\\u003C/li\\u003E\\n\\u003Cli\\u003EDialog boxes consist of a header, body, and footer.\\u003C/li\\u003E\\n\\u003Cli\\u003EValidate that people\\u2019s entries are acceptable before closing the dialog box. Show an inline validation error near the field they must correct.\\u003C/li\\u003E\\n\\u003Cli\\u003EBlocking dialogs should be used very sparingly, only when it is critical that people make a choice or provide information before they can proceed. Blocking dialogs are generally used for irreversible or potentially destructive tasks. They\\u2019re typically paired with an overlay without a light dismiss.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EContent\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003EKeep the title as concise as possible.\\u003C/li\\u003E\\n\\u003Cli\\u003EDon\\u2019t use periods at the end of titles.\\u003C/li\\u003E\\n\\u003Cli\\u003EThis mandatory content should explain the main information in a clear, concise, and specific statement or question. For example, \\u201CDelete this file?\\u201D instead of \\u201CAre you sure?\\u201D.\\u003C/li\\u003E\\n\\u003Cli\\u003EThe title shouldn\\u2019t be a description of the body content. For example, don\\u2019t use \\u201CError\\u201D as a title. Instead, use an informative statement like \\u201CYour session ended.\\u201D.\\u003C/li\\u003E\\n\\u003Cli\\u003EUse sentence-style capitalization\\u2014only capitalize the first word. For more info, see Capitalization in the Microsoft Writing Style Guide\\u003C/li\\u003E\\n\\u003C/ul\\u003E\",\"Name\":\"Dialog\"},{\"Component Maturity\":\"GA\",\"Components\":\"16738F64-2C20-ED11-B83E-000D3A53B4EC\",\"Components Description\":\"\\u003Cp\\u003EThe Pivot control and related tabs pattern are used for navigating frequently accessed, distinct content categories. Pivots allow for navigation between two or more content views and relies on text headers to articulate the different sections of content.\\u003C/p\\u003E\\n\",\"Guidance\":null,\"Name\":\"Pivot\"},{\"Component Maturity\":\"GA\",\"Components\":\"FE246CCD-281F-ED11-B83E-000D3A53B563\",\"Components Description\":\"The Keyboard short-cut code component registers key press event handlers to allow keyboard short cuts to be used inside canvas apps or custom pages.\",\"Guidance\":null,\"Name\":\"Keyboard shortcuts\"},{\"Component Maturity\":\"GA\",\"Components\":\"830124AD-A41F-ED11-B83E-000D3A53B5F2\",\"Components Description\":\"Buttons give people a way to trigger an action. They\\u2019re typically found in forms, dialog panels, and dialogs. Some buttons are specialized for particular tasks, such as navigation, repeated actions, or presenting menus.\\n\\nThe Icon Component can render as:\\n - A simple icon with no interaction\\n - A simple icon button or action button with text/border/fill\",\"Guidance\":\"\\u003Cp\\u003EButtons give people a way to trigger an action. They\\u2019re typically found in forms, dialog panels, and dialogs. Some buttons are specialized for particular tasks, such as navigation, repeated actions, or presenting menus.\\n\\u003C/p\\u003E\\n\\u003Cp\\u003E\\nThe Icon Component can render as:\\n\\u003Cli\\u003EA simple icon with no interaction\\u003C/li\\u003E\\n\\u003Cli\\u003EA simple icon button or action button with text/border/fill\\u003C/li\\u003E\\n\\u003C/p\\u003E\\n\",\"Name\":\"Icon\"},{\"Component Maturity\":\"GA\",\"Components\":\"5352E7B9-D114-ED11-B83D-002248214BCD\",\"Components Description\":\"CommandBar is a surface that houses commands that operate on the content of the window, panel, or parent region it resides above. CommandBars are one of the most visible and recognizable ways to surface commands, and can be an intuitive method for interacting with content on the page; however, if overloaded or poorly organized, they can be difficult to use and hide valuable commands from your user. CommandBars can also display a search box for finding content, hold simple commands as well as menus, or display the status of ongoing actions.\\n\\nCommands should be sorted in order of importance, from left-to-right or right-to-left depending on the culture. Secondarily, organize commands in logical groupings for easier recall. CommandBars work best when they display no more than 5-7 commands. This helps users quickly find your most valuable features. If you need to show more commands, consider using the overflow menu. If you need to render status or viewing controls, these go on the right side of the CommandBar (or left side if in a left-to-right experience). Do not display more than 2-3 items on the right side as it will make the overall CommandBar difficult to parse.\\n\\nAll command items should have an icon and a label. Commands can render as labels only as well. In smaller widths, commands can just use icon only, but only for the most recognizable and frequently used commands. All other commands should go into an overflow where text labels can be shown.\",\"Guidance\":null,\"Name\":\"Command Bar\"},{\"Component Maturity\":\"GA\",\"Components\":\"7E05F873-1422-ED11-B83E-00224828E504\",\"Components Description\":\"Tag lists show auto width labels one after another with option styling of each tag. They are useful for showing tags in a list where space is limited. The tags will wrap and provide an auto height output to allow reflowing of content below them.\",\"Guidance\":null,\"Name\":\"Tag List\"},{\"Component Maturity\":\"GA\",\"Components\":\"50D22684-3520-ED11-B83E-00224828E6BE\",\"Components Description\":\"Resizable text areas can be used to show content that would benefit from the user being able to assign more width/height when reading or editing the content.\",\"Guidance\":\"Resizable text areas can be used to show content that would benefit from the user being able to assign more width/height when reading or editing the content.\",\"Name\":\"Resizable Text Area\"},{\"Component Maturity\":\"Preview\",\"Components\":\"4FCBBFCC-3520-ED11-B83E-00224828E6BE\",\"Components Description\":\"\\u003Cp\\u003EProgressIndicators are used to show the completion status of an operation lasting more than 2 seconds. If the state of progress cannot be determined, use a Spinner instead. ProgressIndicators can appear in a new panel, a flyout, under the UI initiating the operation, or even replacing the initiating UI, as long as the UI can return if the operation is canceled or is stopped.\\u003C/p\\u003E\",\"Guidance\":null,\"Name\":\"ProgressIndicator\"},{\"Component Maturity\":\"GA\",\"Components\":\"3C0D2E7A-DE21-ED11-B83E-00224828E708\",\"Components Description\":\"Shimmer is a temporary animation placeholder for when a service call takes time to return data and we don\\u0027t want to block rendering the rest of the UI.\",\"Guidance\":null,\"Name\":\"Shimmer\"},{\"Component Maturity\":\"GA\",\"Components\":\"FEFC3EDB-3520-ED11-B83E-00224828E735\",\"Components Description\":\"Depth (also referred to as elevation) is used to draw focus to an experience and add a physical materiality to the app. Shallow levels are reserved for items that are closely connected to the canvas or view, such as tiles. Deeper levels create a prominent frame around the surface, drawing strong focus to self-contained experiences like dialogs.\",\"Guidance\":null,\"Name\":\"Elevation\"},{\"Component Maturity\":\"GA\",\"Components\":\"1EBB9A6F-0122-ED11-B83E-00224828E735\",\"Components Description\":\"Pickers\\u202Fare used to select one or more items, such as tags or files,\\u202Ffrom a large list.\",\"Guidance\":\"\\u003Cdiv data-wrapper=\\u0022true\\u0022 style=\\u0022font-size:9pt;font-family:\\u0027Segoe UI\\u0027,\\u0027Helvetica Neue\\u0027,sans-serif;\\u0022\\u003E\\u003Ch2 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ELayout\\u003C/span\\u003E\\u003C/h2\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EUse a picker to quickly search for a few tags or files.\\u003C/span\\u003E\\u003C/li\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EUse a picker to manage a group of tags or files.\\u003C/span\\u003E\\u003C/li\\u003E\\u003C/ul\\u003E\\u003C/div\\u003E\",\"Name\":\"Tag Picker\"},{\"Component Maturity\":\"GA\",\"Components\":\"D4DB6398-9224-ED11-B83E-00224828EA95\",\"Components Description\":null,\"Guidance\":\"\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003ESorting\\u003C/h3\\u003E\\n\\n\\u003Cp\\u003EA column is defined as being sortable by setting the ColSortable property to true. If the column shows a text value that is different to the sort order required (e.g. a formatted date or status column), then a different sort column can be specified using the ColSortBy property.\\n\\u003Cbr/\\u003E\\u003C/p\\u003E\\n\\u003Cp\\u003E\\nSorting is then handled in two ways:\\u003C/p\\u003E\\n\\u003Cp\\u003E1) Automatically when connected to a Dataverse data source.\\u003C/p\\u003E\\n\\u003Cp\\u003E2) Manually when using collections.\\u003C/p\\u003E\\n\\n\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EAutomatic Sorting\\u003C/h3\\u003E\\n\\u003Cp\\u003EWhen the Items dataset is a native Dataverse dataset, it will automatically sorted if a column is marked as sortable. If there any changes made to the shape of a Dataverse collection by using AddColumn, or by storing the data in a collection, automatic sorting will no longer work, and manual sorting must be implemented.\\n\\u003Cbr/\\u003E\\u003C/p\\u003E\\n\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EManual Sorting\\u003C/h3\\u003E\\n\\u003Cp\\u003EManual Sorting is supported outside of the component to allow for custom connector support and local collection sorting when not connected to a Dataverse connection. Columns can be defined as being sortable or not. When the column sort is selected, an OnChange event is raised providing the column and direction. The app should then use these values to change the bound collection to the table to update with the sorted records.\\n\\u003Cbr/\\u003E\\u003C/p\\u003E\\n\\u003Cp\\u003E\\nWhen connecting the DetailsList to a Dataverse data source, the paging and sorting is handled automatically, however the app must provide the buttons to perform navigation and provide information on the number of records. This is to allow for custom layouts.\\n\\u003Cbr/\\u003E\\u003C/p\\u003E\\n\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EPaging\\u003C/h3\\u003E\\n\\u003Cp\\u003EPaging is handled internally by the component, however the buttons to move back/forwards must be created by the hosting app, and events sent to the component.\\n\\u003Cbr/\\u003E\\u003C/p\\u003E\\n\\u003Cp\\u003E\\n\\u003Cul\\u003E\\n\\u003Cli\\u003EPageSize - Defines how many records to load per page.\\u003C/li\\u003E\\n\\u003Cli\\u003EPageNumber - Outputs the current page shown.\\u003C/li\\u003E\\n\\u003Cli\\u003EHasNextPage - Outputs true if there is a next page.\\u003C/li\\u003E\\n\\u003Cli\\u003EHasPreviousPage - Outputs true if there is a previous page.\\u003C/li\\u003E\\n\\u003Cli\\u003ETotalRecords - Outputs the total number of records available.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\",\"Name\":\"Details List Sorting \\u0026 Paging\"},{\"Component Maturity\":\"GA\",\"Components\":\"94044832-3520-ED11-B83E-00224828EE8D\",\"Components Description\":\"\\u003Cp\\u003EContextualMenus are lists of commands that are based on the context of selection, mouse hover or keyboard focus. They are one of the most effective and highly used command surfaces, and can be used in a variety of places.\\u003C/p\\u003E\\n\\u003Cp\\u003E\\nThere are variants that originate from a command bar, or from cursor or focus. Those that come from CommandBars use a beak that is horizontally centered on the button. Ones that come from right click and menu button do not have a beak, but appear to the right and below the cursor. ContextualMenus can have submenus from commands, show selection checks, and icons.\\u003C/p\\u003E\\n\\u003Cp\\u003E\\nOrganize commands in groups divided by rules. This helps users remember command locations, or find less used commands based on proximity to others. One should also group sets of mutually exclusive or multiple selectable options. Use icons sparingly, for high value commands, and don\\u2019t mix icons with selection checks, as it makes parsing commands difficult. Avoid submenus of submenus as they can be difficult to invoke or remember.\\u003C/p\\u003E\",\"Guidance\":null,\"Name\":\"ContextMenu\"},{\"Component Maturity\":\"GA\",\"Components\":\"8F5276CB-8D24-ED11-B83E-00224828EE8D\",\"Components Description\":\"\\u003Ch2 style=\\u0022font-weight:600\\u0022\\u003EBest practices\\u003C/h2\\u003E\\n\\u003Ch3 style=\\u0022font-weight:600\\u0022\\u003EDetailsList cells can have various cell types:\\u003C/h3\\u003E\\u003Cul\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003EImage \\u2013 \\u003C/b\\u003EExternal images, icons, or svgs rendered with optional padding.\\u003C/li\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003EClickable Image \\u2013 \\u003C/b\\u003ESame as image, except selecting will raise the OnChange event.\\u003C/li\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003EText Tag \\u2013 \\u003C/b\\u003ERenders as an optionally colored tag.\\u003C/li\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003ETag Indicator \\u2013 \\u003C/b\\u003ERenders as a text tag with a colored indicator dot.\\u003C/li\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003ELink \\u2013 \\u003C/b\\u003ERenders as a selectable link that raises the OnChange event.\\u003C/li\\u003E\\n\\u003Cli\\u003E\\u003Cb\\u003EExpand \\u2013 \\u003C/b\\u003ERenders a cell expand chevron that shows/hides sub text cells.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\",\"Guidance\":null,\"Name\":\"DetailList - CellTypes\"},{\"Component Maturity\":\"Preview\",\"Components\":\"8F5276CB-8D24-ED11-B83E-00224829FF8D\",\"Components Description\":\"A\\u00A0face pile (Facepile)\\u00A0displays a list of personas. Each circle represents a person and contains their image or initials. Often\\u00A0this control is used when sharing who has access to a specific view or file, or when assigning someone a task within a workflow.\",\"Guidance\":\"\\u003Cdiv data-wrapper=\\u0022true\\u0022 style=\\u0022font-size:9pt;font-family:\\u0027Segoe UI\\u0027,\\u0027Helvetica Neue\\u0027,sans-serif;\\u0022\\u003E\\u003Ch2 style=\\u0022font-weight:600\\u0022\\u003E\\u003Cspan style=\\u0022font-size:12pt\\u0022\\u003ELayout\\u003C/span\\u003E\\u003C/h2\\u003E\\n\\u003Cdiv\\u003E\\u0026nbsp;\\u003C/div\\u003E\\n\\u003Cul\\u003E\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EThe face pile empty state should only include an \\u0022Add\\u0022 button. Another variant is to use an input field with placeholder text instructing people to add a person. See the people picker component for the menu used to add people to the face pile list.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EWhen there is only one person in the face pile, consider using their name next to the face or initials.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EWhen there is a need to show the face pile expanded into a vertical list, include a downward chevron button. Selecting the chevron opens a standard list view of people.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EWhen the face pile exceeds a max number of 5 people, show a button at the end of the list indicating how many are not being shown. Clicking or tapping on the overflow would open a standard list view of people.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EThe component can include an \\u0022Add\\u0022 button which can be used for quickly adding a person to the list.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003Cli style=\\u0022list-style-position: inside;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:11pt\\u0022\\u003EWhen hovering over a person in the face pile, include a tooltip or people card that offers more information about that person.\\u003C/span\\u003E\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\u003C/div\\u003E\",\"Name\":\"Facepile\"}]",
    "IsSampleData": false,
    "IsWritable": false,
    "Name": "Components",
    "OrderedColumnNames": [
      "Components",
      "Components Description",
      "Name",
      "Component Maturity",
      "Guidance"
    ],
    "OriginalName": "Components",
    "OriginalSchema": "*['Component Maturity':s, Components:s, 'Components Description':s, Guidance:s, Name:s]",
    "Schema": "*['Component Maturity':s, Components:s, 'Components Description':s, Guidance:s, Name:s]",
    "Token": "dummyToken",
    "Type": "StaticDataSourceInfo"
  }
]